version: 2.1
timezone:
  America/Los_Angeles

jobs:
  style_tests:
    docker:
      - image: chef/chefdk:4.5.0
    working_directory: ~/circulate
    environment:
      GEM_HOME: /opt/chefdk/embedded/lib/ruby/gems/2.6.0/gems
      GEM_PATH: /opt/chefdk/embedded/lib/ruby/gems/2.6.0
      GEM_ROOT: /opt/chefdk/embedded/lib/ruby/gems/2.6.0
    steps:
      - checkout
      - run:
          name: Install Kitchen Docker
          command: chef gem install kitchen-docker -v 2.9.0 --chef-license accept
      - run:
          name: Install Junit Formatter
          command: chef gem install rspec_junit_formatter -v 0.4.1 --chef-license accept
      - run:
          name: Debug Outputs
          command: /opt/chefdk/embedded/bin/gem list | grep -i kitchen && env
      - run:
          name: Create Reports Directory
          command: mkdir reports
      - run:
          name: Run Rake Task
          command: /opt/chefdk/embedded/bin/rake style_tests --trace
      - store_test_results:
          path: reports/

  integration_tests:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    working_directory: ~/circulate
    #environment:
     # GEM_HOME: /opt/chefdk/embedded/lib/ruby/gems/2.6.0/gems
     # GEM_PATH: /opt/chefdk/embedded/lib/ruby/gems/2.6.0
     # GEM_ROOT: /opt/chefdk/embedded/lib/ruby/gems/2.6.0
    steps:
      - checkout
      - run:
          name: Create Reports Directory
          command: mkdir reports
      - run:
          name: Install Ruby 2.6.5
          command: |
            rvm install 2.6.5
            echo . $(rvm 2.6.5 do rvm env --path) >> $BASH_ENV
      #- run:
      #    name: Install ChefDK
      #    command: wget https://packages.chef.io/files/stable/chefdk/4.5.0/ubuntu/16.04/chefdk_4.5.0-1_amd64.deb && sudo dpkg -i chefdk_4.5.0-1_amd64.deb && eval "$(chef shell-init bash)"
      #- run:
      #    name: ChefDK Eval
      #    command: eval "$(chef shell-init bash)"
      - run:
          name: Debug
          command: |
            echo "DEBUG - Ruby Version ($(ruby -v), $(which ruby), $(docker -v))"
            echo "DEBUG - Docker Version ($(docker -v))"
            #echo "DEBUG - ChefDK Version ($(chef -v))"
            echo "DEBUG - /opt ($(ls -alh /opt))"
      - run:
          name: Bundle Gems
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Run Rake Task
          command: bundle exec rake integration:docker --trace
      - store_test_results:
          path: reports/

  build:
    docker:
      - image: chef/chefdk:4.5.0
    working_directory: ~/circulate
    steps:
      - checkout
      - run:
          name: Message Building
          command: echo 'INFO - BUILD'

  deploy:
    docker:
      - image: chef/chefdk:4.5.0
    working_directory: ~/circulate
    steps:
      - checkout
      - run:
          name: Message Deploying
          command: echo 'INFO - DEPLOY'

workflows:
  version: 2
  # Put in one because not paying for parallel jobs
  style_and_integration:
    jobs:
    - style_tests
    - integration_tests:
        requires:
        - style_tests
    - build:
        requires:
        - integration_tests
        filters:
          branches:
            only: master
    - deploy:
        requires:
        - build
        filters:
          branches:
            only: master

notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/076791447ffdd7cf8037

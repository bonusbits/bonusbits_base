---

# YAML Anchors - Shared Values
anchors:
  # AWS Account
  aws_tag_owner: &aws_tag_owner <%= ENV.fetch('USER', 'bonusbits') %>

platforms:
  # AWS AMI/EC2 Platforms
  - name: amazon-ami
    driver:
      associate_public_ip: <%= ENV.fetch('AWS_PUBLIC_IP', 'false') %>
      aws_ssh_key_id: <%= ENV.fetch('AWS_SSH_KEY_ID', 'bonusbits_dev_key') %>
      iam_profile_name: <%= ENV.fetch('AWS_IAM_INSTANCE_PROFILE_LNX', 'Linux-Instance_Role') %>
      image_search:
        owner-id: 137112412989
        name: amzn-ami-hvm-2018.*x86_64-gp2
      instance_initiated_shutdown_behavior: terminate
      instance_type: t3.micro
      name: ec2
      region: <%= ENV.fetch('AWS_REGION', 'us-west-2') %>
      security_group_ids:
        - <%= ENV.fetch('AWS_SECURITY_GROUP_lnx_1', 'sg-00000000') %>
        - <%= ENV.fetch('AWS_SECURITY_GROUP_lnx_2', 'sg-00000000') %>
      subnet_id: <%= ENV.fetch('AWS_SUBNET_ID', 'subnet-00000000') %>
      tags:
        Created-By: Test Kitchen
        OS: Amazon 2018
        Owner: *aws_tag_owner
      # user_data: *bootstrap_lnx
      vpc_id: <%= ENV.fetch('AWS_VPC_ID', 'vpc-00000000') %>
    transport:
      username: ec2-user
      ssh_key: <%= ENV.fetch('AWS_SSH_KEY_PATH', ENV['HOME'] + "/.ssh/bonusbits_dev_key.pem") %>

  # Docker Platforms
  - name: amazon-docker
    driver:
      name: docker
      use_sudo: false
      image: amazonlinux:1-with-sources
      platform: rhel
      provision_command:provision_command:
        # - echo "export http_proxy=<%= ENV['http_proxy']%>" > /etc/profile.d/proxy.sh
        # - echo "export https_proxy=<%= ENV['https_proxy']%>" >> /etc/profile.d/proxy.sh
        # - echo "export no_proxy=<%= ENV['no_proxy']%>" >> /etc/profile.d/proxy.sh
        # - export http_proxy="<%= ENV['http_proxy']%>"
        # - export https_proxy="<%= ENV['https_proxy']%>"
        # - export no_proxy="<%= ENV['no_proxy']%>"
        - yum -y install upstart procps util-linux
      ssl_verify_mode: ":verify_none"
      # http_proxy: <%= ENV['http_proxy']%>
      # https_proxy: <%= ENV['https_proxy']%>
      # no_proxy: <%= ENV['no_proxy']%>

provisioner:
  data_bags_path: "test/data_bags"
  download_url: https://packages.chef.io/files/current/chefdk/4.3.13/el/7/chefdk-4.3.13-1.el7.x86_64.rpm
  encrypted_data_bag_secret_key_path: "test/data_bags/encrypted_data_bag_secret"
  environments_path: "test/environments"
  name: chef_zero
  product_name: chefdk
  product_version: 4.3.13
  roles_path: "test/roles"

suites:
  - name: docker_base
    run_list:
      - role[base]
    provisioner:
      client_rb:
        environment: bonusbits_base
#    attributes:
#      <% if ENV['CIRCLECI'] %>
#      bonusbits_base:
#        deployment_location: 'circleci'
#      <% end %>
    includes: ["amazon-docker"]

  - name: docker_base_java
    run_list:
      - role[base]
    provisioner:
      client_rb:
        environment: bonusbits_base_java
    attributes:
      <% if ENV['CIRCLECI'] %>
      bonusbits_base:
        deployment_location: 'circleci'
      <% end %>
    verifier:
      attributes:
        install_java: 'true'
        java_package_name: 'java-1.8.0-openjdk'
        specify_version: 'false'
        java_version: '1.8.0.151-1.b12.35.amzn1'
    includes: ["amazon-docker"]

  - name: docker_base_epel_repo
    run_list:
      - role[base]
    provisioner:
      client_rb:
        environment: bonusbits_base_epel_repo
    verifier:
      attributes:
        configure_epel: 'true'
        install_epel_packages: 'true'
    attributes:
      <% if ENV['CIRCLECI'] %>
      bonusbits_base:
        deployment_location: 'circleci'
      <% end %>
    includes: ["amazon-docker"]

  - name: docker_base_no_software
    run_list:
      - role[base]
    provisioner:
      client_rb:
        environment: bonusbits_base_no_software
    verifier:
      attributes:
        install_packages: 'false'
    attributes:
      <% if ENV['CIRCLECI'] %>
      bonusbits_base:
        deployment_location: 'circleci'
      <% end %>
    includes: ["amazon-docker"]

  - name: ec2_base
    provisioner:
      client_rb:
        environment: bonusbits_base
    driver:
      tags:
        Name: kitchen-bonusbits-base-<%= ENV['USER'] %>
    run_list:
      - role[base]
    verifier:
      attributes:
        configure_backups: 'true'
    includes: ["amazon-ami"]

  - name: ec2_base_java
    provisioner:
      client_rb:
        environment: bonusbits_base_java
    driver:
      tags:
        Name: kitchen-bonusbits-base-<%= ENV['USER'] %>
    run_list:
      - role[base]
    verifier:
      attributes:
        configure_backups: 'false'
        install_java: 'true'
        java_package_name: 'java-1.8.0-openjdk'
        specify_version: 'false'
        java_version: '1.8.0.151-1.b12.35.amzn1'
    includes: ["amazon-ami"]

  - name: ec2_base_epel_repo
    provisioner:
      client_rb:
        environment: bonusbits_base_epel_repo
    driver:
      tags:
        Name: kitchen-bonusbits-base-epel-<%= ENV['USER'] %>
        Created-By: Test Kitchen
        Owner: *aws_tag_owner
    run_list:
      - role[base]
    verifier:
      attributes:
        configure_epel: 'true'
        install_epel_packages: 'true'
    includes: ["amazon-ami"]

  - name: ec2_base_no_software
    provisioner:
      client_rb:
        environment: bonusbits_base_no_software
    driver:
      tags:
        Name: kitchen-bonusbits-base-no-software<%= ENV['USER'] %>
        Created-By: Test Kitchen
        Owner: *aws_tag_owner
    run_list:
      - role[base]
    verifier:
      attributes:
        install_packages: 'false'
    includes: ["amazon-ami"]

verifier:
  name: inspec
  format: <%= ENV['CI'] ? 'junit' : 'cli' %>
  <% if ENV['CI'] %>
  output: "reports/%{platform}_%{suite}_inspec.xml"
  <% end %>
  inspec_tests:
    - name: bootstrap
      git: https://github.com/bonusbits/inspec_bootstrap.git
    - name: bonusbits_base
      git: https://github.com/bonusbits/inspec_bonusbits_base.git
      release: 1.0.0
    # - path: ../inspec_bonusbits_base
  attributes:
    debug: 'false'
    chef_version: '15.2.20'
